/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package fundamentos.ra.gradle.teste;

import fundamentos.ra.gradle.dominio.Usuario;
import org.apache.http.HttpStatus;
import org.junit.Test;

import static io.restassured.RestAssured.given;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.CoreMatchers.notNullValue;

// Usa heranca para pegar o setup
public class TesteUsuario extends TesteBase {

    // criar variaveis estaticas para melhor leitura dos testes
    private static final String LISTA_USUARIOS_ENDPOINT = "/users";
    private static final String CRIAR_USUARIO_ENDPOINT = "/user";


    @Test
    public void testMostraPaginaEspecifica() {

        given().
                params("page","2").

        // url que quero testar
        when().

                // testa metodo GET
                get(LISTA_USUARIOS_ENDPOINT).

        // validacoes que faco para essa url
        then().
                // valida status code
                statusCode(HttpStatus.SC_OK).

                // valida um campo do json de resposta
                body("page",is(2)).

                // valida se o campo data nao esta vazio
                body("data",is(notNullValue()));

    }

    @Test
    public void testCriarUsuarioComSucesso(){

        // instancio o usuario, para passar os campos do json
        Usuario usuario = new Usuario("vaneyck","analista de teste","van@gmail.com");


        // .log.all() mostra como ta indo a requisicao
        given().

                // informa que o conteudo do body eh um json
                //contentType(ContentType.JSON).

                // conteudo do body
                body(usuario).

        when().
                // testa metodo POST
                post(CRIAR_USUARIO_ENDPOINT).

        then().
                statusCode(HttpStatus.SC_CREATED).

                body("name",is("vaneyck"));
    }

    @Test
    public void testTamanhoDosItensMostradosIgualAoPerPage() {

        int paginaEsperada = 2;

        // guardando uma informacao que vem na resposta de uma requisicao
        int perPageEsperado = retornaPerPageEsperado(paginaEsperada);

        given().
                params("page",paginaEsperada).

        when().
                get(LISTA_USUARIOS_ENDPOINT).
        then().

                statusCode(HttpStatus.SC_OK).

                // o rest assured transforma o array data em um groovy collection
                body(
                        "page",is(paginaEsperada),
                        "data.size()",is(perPageEsperado),
                        // pega cada item do data e checa se o campo avatar comeca com o site da amazon
                        "data.findAll { it.avatar.startsWith('https://s3.amazonaws.com') }.size()", is(perPageEsperado)
                );


    }

    private int retornaPerPageEsperado(int page) {
        return given().
                            param("page",page).
                          when().
                            get(LISTA_USUARIOS_ENDPOINT).
                          then().
                          // faz de novo a requisicao pra checar se realmente bateu no endpoint
                            statusCode(HttpStatus.SC_OK).
                          // extrai o valor do campo per_page e atribui a variavel
                          extract().
                            path("per_page");
    }

}
